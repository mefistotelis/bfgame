name: Build

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  ubuntu-gcc:
    runs-on: ubuntu-20.04
    name: "Linux Ubuntu"
    container:
      image: ubuntu:20.04
    env:
      DEBIAN_FRONTEND: noninteractive
      TZ: Etc/UTC
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          # add i386 dependencies
          dpkg --add-architecture i386

          apt update
          apt install -y \
            gcc-multilib g++-multilib lib32z1 python3 \
            vorbis-tools cdparanoia \
            libsdl1.2-dev:i386 libopenal-dev:i386 libvorbis-dev:i386 \
            libvorbisfile3:i386 libogg-dev:i386

          apt install -y \
            build-essential autoconf libtool make

      - name: Autoreconf
        run: autoreconf -ivf

      - name: Configure
        env:
          CFLAGS: "-m32"
          CXXFLAGS: "-m32"
          LDFLAGS: "-m32"
          PKG_CONFIG_PATH: "/usr/lib/i386-linux-gnu/pkgconfig"
        run: |
          mkdir -p release; cd release
          ../configure

      - name: Make
        run: |
          cd release
          make V=1

  windows-msys2:
    name: "Windows MSYS2"
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          update: true
          install: >-
              git
              mingw-w64-i686-toolchain
              mingw-w64-i686-autotools
              mingw-w64-i686-libpng
              mingw-w64-i686-SDL
              mingw-w64-i686-openal
              mingw-w64-i686-libvorbis
              mingw-w64-i686-libogg

      - name: Autoreconf
        run: autoreconf -ivf

      - name: Configure
        env:
          CFLAGS: "-m32"
          CXXFLAGS: "-m32"
          LDFLAGS: "-m32"
        run: |
          mkdir -p release; cd release
          ../configure

      - name: Make
        run: |
          cd release
          make V=1
