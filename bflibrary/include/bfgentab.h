/******************************************************************************/
// Bullfrog Engine Emulation Library - for use to remake classic games like
// Syndicate Wars, Magic Carpet, Genewars or Dungeon Keeper.
/******************************************************************************/
/** @file bfgentab.h
 *     Header file for ggengh.cpp and ggenf.cpp.
 * @par Purpose:
 *     Unknown.
 * @par Comment:
 *     None.
 * @author   Tomasz Lis
 * @date     12 Nov 2008 - 05 Nov 2021
 * @par  Copying and copyrights:
 *     This program is free software; you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation; either version 2 of the License, or
 *     (at your option) any later version.
 */
/******************************************************************************/
#ifndef BFLIBRARY_BFGENTAB_H_
#define BFLIBRARY_BFGENTAB_H_

#include "bftypes.h"

#ifdef __cplusplus
extern "C" {
#endif

extern TbPixel fade_table[256*64];
extern TbPixel ghost_table[256*256];

/** Load or generate colour fading table.
 *
 * Generates tables for fading any colour within given palette, to black.
 * The tables simplify changing colour brightness, by storing 64 levels
 * of brightness in an array.
 * Fills global fade_table buffer with data from given file.
 * If the file access fails, the data is instead generated by computing closest
 * color indexes for fading.
 */
TbResult LbFadeTableGenerate(const ubyte *palette, const char *table_fname);

/** Load colour fading table.
 */
TbResult LbFadeTableLoad(const ubyte *palette, const char *table_fname);

/** Load or generate colour ghosting table.
 *
 * Generates tables for ghosting between any two colors within given palette.
 * The tables simplify overlaying two colours, by storing 8-bit colour indexes
 * in an array.
 * Fills global ghost_table buffer with data from given file.
 * If the file access fails, the data is instead generated by computing closest
 * color indexes for ghosting.
 */
TbResult LbGhostTableGenerate(const ubyte *pal, short intens, const char *fname);

/** Load colour ghosting table, making sure it is symmetrical.
 *
 * Loads colour table from disk. If requested intensity is 50%, it then
 * replaces diagonal half of the array, filling one triangle with corresponding
 * colours from the other.
 * This maks the array return the came colour independently of source
 * colours order.
 *
 * @param pal The palette which colour definitions are used.
 * @param intens Source palette intensity, in percent.
 *        Value 100 means first colour only, 0 means second colour only.
 * @param fname File name from which the table is loaded.
 */
TbResult LbGhostTableLoad(const ubyte *pal, short intens, const char *fname);

#ifdef __cplusplus
};
#endif

#endif // BFLIBRARY_BFGENTAB_H_
/******************************************************************************/
